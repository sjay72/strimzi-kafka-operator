---
apiVersion: "kafka.strimzi.io/v1alpha1"
kind: "Kafka"
metadata:
  finalizers: []
  name: "strimzi-ephemeral"
  ownerReferences: []
spec:
  kafka:
    replicas: 3
    image: "strimzi/kafka:latest"
    storage:
      type: "persistent-claim"
      size: "500Gi"
      deleteClaim: false
    config:
      min.insync.replicas: 3
    brokerRackInitImage: "strimzi/kafka-init:latest"
    tolerations:
    - effect: "NoSchedule"
      key: "key1"
      operator: "Equal"
      value: "value1"
    - effect: "NoSchedule"
      key: "key2"
      operator: "Equal"
      value: "value2"
    livenessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 1
    readinessProbe:
      initialDelaySeconds: 10
      timeoutSeconds: 4
    jvmOptions:
      -Xmx: "4G"
      -Xms: "2G"
      -XX:
        -foo: "bar"
    resources:
      limits:
        memory: "5Gi"
    metrics:
      lowercaseOutputName: true
      rules:
      - pattern: "kafka.server<type=(.+), name=(.+)PerSec\\w*><>Count"
        name: "kafka_server_$1_$2_total"
      - pattern: "kafka.server<type=(.+), name=(.+)PerSec\\w*, topic=(.+)><>Count"
        name: "kafka_server_$1_$2_total"
        labels:
          topic: "$3"
  zookeeper:
    replicas: 3
    image: "strimzi/zookeeper:latest"
    storage:
      type: "ephemeral"
    config: {}
    tolerations:
    - effect: "NoSchedule"
      key: "key1"
      operator: "Equal"
      value: "value1"
    - effect: "NoSchedule"
      key: "key2"
      operator: "Equal"
      value: "value2"
    livenessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 1
    readinessProbe:
      initialDelaySeconds: 10
      timeoutSeconds: 4
    jvmOptions:
      -Xmx: "512Mi"
      -Xms: "512Mi"
    resources:
      limits:
        memory: "512Mi"
    metrics: {}
  topicOperator:
    watchedNamespace: "my-ns"
    image: "strimzi/topic-operator:latest"
    reconciliationIntervalSeconds: 90
    zookeeperSessionTimeoutSeconds: 20
    topicMetadataMaxAttempts: 6
  someExtraThing: true